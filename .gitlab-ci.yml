variables:
    GIT_SUBMODULE_STRATEGY: recursive

stages:
    - build
    - image
    - deploy

build:
    stage: build
    tags:
        - dotnet-2.0
    script:
        - dotnet --info
        - cd /builds/maplestory/maplestory.io
        - dotnet restore -r ubuntu.16.04-x64
        - dotnet publish -r ubuntu.16.04-x64
        - dotnet publish -r ubuntu.16.04-x64 -c Release
        - dotnet restore -r win10-x64
        - dotnet publish -r win10-x64
        - dotnet publish -r win10-x64 -c Release
        - dotnet restore -r win8-x64
        - dotnet publish -r win8-x64
        - dotnet publish -r win8-x64 -c Release
        - dotnet restore -r osx.10.12-x64
        - dotnet publish -r osx.10.12-x64
        - dotnet publish -r osx.10.12-x64 -c Release
        - dotnet restore -r ubuntu.14.04-x64
        - dotnet publish -r ubuntu.14.04-x64
        - dotnet publish -r ubuntu.14.04-x64 -c Release
    artifacts:
        name: "MapleStory.IO"
        paths:
            - /builds/maplestory/maplestory.io/maplestory.io/bin/Debug/netcoreapp1.1/ubuntu.16.04-x64/publish
            - /builds/maplestory/maplestory.io/maplestory.io/bin/Release/netcoreapp1.1/ubuntu.16.04-x64/publish
            - /builds/maplestory/maplestory.io/maplestory.io/bin/Debug/netcoreapp1.1/win10-x64/publish
            - /builds/maplestory/maplestory.io/maplestory.io/bin/Debug/netcoreapp1.1/win8-x64/publish
            - /builds/maplestory/maplestory.io/maplestory.io/bin/Debug/netcoreapp1.1/osx.10.12-x64/publish
            - /builds/maplestory/maplestory.io/maplestory.io/bin/Release/netcoreapp1.1/ubuntu.14.04-x64/publish
            - /builds/maplestory/maplestory.io/maplestory.io/bin/Release/netcoreapp1.1/win10-x64/publish
            - /builds/maplestory/maplestory.io/maplestory.io/bin/Release/netcoreapp1.1/win8-x64/publish
            - /builds/maplestory/maplestory.io/maplestory.io/bin/Release/netcoreapp1.1/osx.10.12-x64/publish
            - /builds/maplestory/maplestory.io/maplestory.io/bin/Debug/netcoreapp1.1/ubuntu.14.04-x64/publish

docker_image:
    stage: image
    tags:
        - docker  
    services:
        - docker:dind
    script:
        - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} registry.crr.io
        - docker build -t registry.crr.io/maplestory/maplestory.io:latest .
        - docker push registry.crr.io/maplestory/maplestory.io:latest
        - echo $CI_COMMIT_SHA
        - docker tag registry.crr.io/maplestory/maplestory.io:latest registry.crr.io/maplestory/maplestory.io:$CI_COMMIT_SHA
        - docker push registry.crr.io/maplestory/maplestory.io:$CI_COMMIT_SHA

kubernetes_deploy:
    stage: deploy
    image: lwolf/kubectl_deployer:latest
    services:
        - docker:dind
    script:
        - kubectl config set-cluster my-cluster --server="$K8S_URL" --insecure-skip-tls-verify=true
        - kubectl config set-credentials admin --token="$K8S_TOKEN"
        - kubectl config set-context default-context --cluster=my-cluster --user=admin
        - kubectl config use-context default-context
        - kubectl get cs
        - kubectl set image deployment/maplestory-io maplestory-io=registry.crr.io/maplestory/maplestory.io:$CI_COMMIT_SHA --namespace=io